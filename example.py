#!/usr/bin/env python3
"""
–ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è Minimal Decimal SDK
"""

import asyncio
from minimal_sdk import (
    get_del_balance,
    get_token_balance_by_symbol,
    send_del,
    send_token_by_symbol,
    get_private_key_from_seed
)

async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–∏–º–µ—Ä–∞"""
    print("üöÄ –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è Minimal Decimal SDK")
    print("=" * 50)
    
    # –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    seed_phrase = "–í–∞—à–∞ —Å–∏–¥ —Ñ—Ä–∞–∑–∞"
    recipient = "0x40900a48273644768c09183e00e43528c17a29f6"
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–ª—é—á –∏ –∞–¥—Ä–µ—Å
        private_key = get_private_key_from_seed(seed_phrase)
        from eth_account import Account
        account = Account.from_key(private_key)
        sender_address = account.address
        
        print(f"üì§ –ê–¥—Ä–µ—Å –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è: {sender_address}")
        print(f"üì• –ê–¥—Ä–µ—Å –ø–æ–ª—É—á–∞—Ç–µ–ª—è: {recipient}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–ª–∞–Ω—Å DEL
        print(f"\nüí∞ –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–ª–∞–Ω—Å–∞ DEL...")
        del_balance = await get_del_balance(sender_address)
        print(f"   –ë–∞–ª–∞–Ω—Å DEL: {del_balance}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–ª–∞–Ω—Å —Ç–æ–∫–µ–Ω–∞
        print(f"\nü™ô –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–ª–∞–Ω—Å–∞ —Ç–æ–∫–µ–Ω–∞...")
        token_info = await get_token_balance_by_symbol("fridaycoin", sender_address)
        if token_info:
            print(f"   –¢–æ–∫–µ–Ω: {token_info['symbol']}")
            print(f"   –ê–¥—Ä–µ—Å: {token_info['address']}")
            print(f"   –ë–∞–ª–∞–Ω—Å: {token_info['balance']}")
        else:
            print(f"   –¢–æ–∫–µ–Ω fridaycoin –Ω–µ –Ω–∞–π–¥–µ–Ω")
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º DEL
        print(f"\nüì§ –û—Ç–ø—Ä–∞–≤–∫–∞ DEL...")
        del_result = await send_del(
            seed_phrase=seed_phrase,
            recipient_address=recipient,
            amount=5,
            message="–¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ Minimal Python SDK"
        )

        if del_result['success']:
            print(f"   ‚úÖ DEL –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
            print(f"   üìã –•–µ—à: {del_result['tx_hash']}")
            print(f"   üî¢ –ë–ª–æ–∫: {del_result['block_number']}")
            print(f"   ‚õΩ –ì–∞–∑: {del_result['gas_used']}")
            print(f"   üí∞ –ë–∞–ª–∞–Ω—Å –ø–æ—Å–ª–µ: {del_result['balance_after']} DEL")
        else:
            print(f"   ‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ DEL: {del_result['error']}")
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–æ–∫–µ–Ω
        print(f"\nü™ô –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–æ–∫–µ–Ω–∞...")
        token_result = await send_token_by_symbol(
            seed_phrase=seed_phrase,
            token_symbol="fridaycoin",
            recipient_address=recipient,
            amount=11
        )
        
        if token_result['success']:
            print(f"   ‚úÖ –¢–æ–∫–µ–Ω –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
            print(f"   üìã –•–µ—à: {token_result['tx_hash']}")
            print(f"   üî¢ –ë–ª–æ–∫: {token_result['block_number']}")
            print(f"   ‚õΩ –ì–∞–∑: {token_result['gas_used']}")
            print(f"   ü™ô –ë–∞–ª–∞–Ω—Å —Ç–æ–∫–µ–Ω–∞ –ø–æ—Å–ª–µ: {token_result['token_balance_after']}")
            print(f"   üìù –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–æ–∫–µ–Ω–µ: {token_result['token_info']['symbol']}")
        else:
            print(f"   ‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ç–æ–∫–µ–Ω–∞: {token_result['error']}")
        
        print(f"\n‚úÖ –ü—Ä–∏–º–µ—Ä –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤ –ø—Ä–∏–º–µ—Ä–µ: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    asyncio.run(main())
